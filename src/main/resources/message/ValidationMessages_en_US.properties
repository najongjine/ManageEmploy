
javax.validation.constraints.AssertFalse.message = must be false
javax.validation.constraints.AssertTrue.message  = must be true
javax.validation.constraints.DecimalMax.message  = must be less than or equal to {value}
javax.validation.constraints.DecimalMin.message  = must be greater than or equal to {value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = must be in the future
javax.validation.constraints.Max.message         = must be less than or equal to {value}
javax.validation.constraints.Min.message         = must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = may not be null
javax.validation.constraints.Null.message        = must be null
javax.validation.constraints.Past.message        = must be in the past
javax.validation.constraints.Pattern.message     = must match "{regexp}"
javax.validation.constraints.Size.message        = size must be between {min} and {max}

org.hibernate.validator.constraints.CreditCardNumber.message = invalid credit card number
org.hibernate.validator.constraints.Email.message            = not a well-formed email address
org.hibernate.validator.constraints.Length.message           = length must be between {min} and {max}
org.hibernate.validator.constraints.NotBlank.message         = may not be empty
org.hibernate.validator.constraints.NotEmpty.message         = may not be empty
org.hibernate.validator.constraints.Range.message            = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message         = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message     = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message              = must be a valid URL
org.hibernate.validator.constraints.br.CNPJ.message          = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message           = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitor.message = invalid Brazilian Voter ID card number

# Message Priority
# 1 ErrorCode.ModelName.FieldName
# 2 ErrorCode.FieldName
# 3 ErrorCode.ClassName
# 4 ErrorCode

#Validator Errors#
Required={0} is required.
Minlength={0} can not be less than {1} characters.
Maxlength={0} can not be greater than {1} characters.
Invalid={0} is invalid.
MinInteger={0}\uc740(\ub294) \uc720\ud6a8\ud55c \uac12\uc774 \uc544\ub2d9\ub2c8\ub2e4. 1 \uc774\uc0c1\uc758 \uac12\uc744 \uc785\ub825\ud574\uc57c \ud569\ub2c8\ub2e4.
Byte={0} must be a byte.
Short={0} must be a short.
Integer={0} must be an integer.
Long={0} must be a long.
Float={0} must be a float.
Double={0} must be a double.

Date={0} is not a date.
Range={0} is not in the range {1} through {2}.
Creditcard={0} is an invalid credit card number.
Email={0} is an invalid e-mail address.

Korean={0} must be korean letters.
NotKorean={0}\uc740(\ub294) \ud55c\uae00\uc744 \uc0ac\uc6a9\ud558\uc2e4\uc218 \uc5c6\uc2b5\ub2c8\ub2e4.

IP=Invalid IP address.
Date=Invalid date format.
Time=Invalid time format.
PhoneNo=Invalid phone number.
ExtensionNo=Invalid extension number.
WindowFilePath=Invalid window file path.
KepcoEmpNo=Invalid Kepco employee number.
PasswordLetter = Password must be contain at least 9 characters 1, least 1 number and both lower and uppercase letters and special characters.
PasswordPattern = Password cannot contain more than four sequential numbers or letters.

NotExist={2} exists in a database.
Exist={2} not exists in a database.